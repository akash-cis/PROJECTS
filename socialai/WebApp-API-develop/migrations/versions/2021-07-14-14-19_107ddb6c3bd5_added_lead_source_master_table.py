"""Added lead source master table

Revision ID: 107ddb6c3bd5
Revises: 3591ed564735
Create Date: 2021-07-14 14:19:11.223092

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from datetime import datetime

# revision identifiers, used by Alembic.
revision = '107ddb6c3bd5'
down_revision = '3591ed564735'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lead_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    campaignmethodtype = postgresql.ENUM('Text', 'Email', name='campaignmethodtype')
    campaignmethodtype.create(op.get_bind())

    campaignindicatortype = postgresql.ENUM('Active', 'InPogress','Inactive', name='campaignindicatortype')
    campaignindicatortype.create(op.get_bind())
    op.drop_column('campaign', 'active_ind')
    op.add_column('campaign', sa.Column('method', sa.Enum('Text', 'Email', name='campaignmethodtype'), nullable=False))
    op.add_column('campaign', sa.Column('text_message', sa.String(), nullable=True))
    op.add_column('campaign', sa.Column('active_ind', sa.Enum('Active', 'InPogress','Inactive', name='campaignindicatortype'), nullable=False))
    
    op.drop_constraint('campaign_templates_schedule_id_fkey', 'campaign_templates', type_='foreignkey')
    op.create_foreign_key(None, 'campaign_templates', 'campaign_schedules', ['schedule_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
    # Use Alchemy's connection and transaction to noodle over the data.
    t_camapign = sa.Table(
        'campaign',
        sa.MetaData(),
        sa.Column('name', sa.Integer()),
        sa.Column('company_id', sa.Integer()), 
        sa.Column('method', sa.String()), 
        sa.Column('active_ind', sa.String()),
        sa.Column('is_disabled', sa.Boolean()),
        sa.Column('date_created', sa.DateTime(), default=datetime.utcnow),
        ) 
    conn = op.get_bind()
    res = conn.execute("select id from public.company")
    results = res.fetchall()
    clients = [{'name': 'Default', 'company_id': r[0],'method':'Text', 'active_ind':'Active','is_disabled':False} for r in results]
    op.bulk_insert(t_camapign, clients)

    t_campaign_selections = sa.Table(
        'campaign_selections',
        sa.MetaData(),
        sa.Column('campaign_id', sa.Integer()),
        sa.Column('value', sa.Integer()), 
        sa.Column('type', sa.String()), 
        ) 

    res1 = conn.execute("select id from public.campaign")
    results1 = res1.fetchall()
    clients1 = [{'campaign_id': r[0], 'type': 'DEFAULT','value':0} for r in results1]
    op.bulk_insert(t_campaign_selections, clients1)

    t_lead_source = sa.Table(
        'lead_source',
        sa.MetaData(),
        sa.Column('name', sa.String()), 
        ) 
   
    clients3 = [{'name': 'Autotrader'},{'name': 'Reddit'},{'name': 'Cars.com'},{'name': 'MBWorld'},{'name': 'Club Lexus'}]
    
    op.bulk_insert(t_lead_source, clients3)

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    #op.drop_constraint(None, 'campaign_templates', type_='foreignkey')
    #op.create_foreign_key('campaign_templates_schedule_id_fkey', 'campaign_templates', 'campaign_schedules', ['schedule_id'], ['id'])
    op.alter_column('campaign', 'active_ind',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('campaign', 'text_message')
    op.drop_column('campaign', 'method')
    op.drop_table('lead_source')

    # ### end Alembic commands ###
    op.execute("DROP TYPE campaignmethodtype;")
    op.execute("DROP TYPE campaignindicatortype;")
    
