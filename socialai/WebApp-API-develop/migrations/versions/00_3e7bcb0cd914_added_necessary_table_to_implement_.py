"""Added necessary table to implement filters functionality

Revision ID: 3e7bcb0cd914
Revises: 3191f273672e
Create Date: 2019-11-20 12:31:11.224617

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3e7bcb0cd914'
down_revision = '3191f273672e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('filter_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('MULTISELECT', 'SELECT', 'TEXT', name='filtergrouptype'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('filter_field', sa.Enum('TAGS', 'BODY', 'LOCATION', name='filterfield'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('selection_option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('filter_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['filter_type_id'], ['filter_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company_filter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('selection_option_id', sa.Integer(), nullable=False),
    sa.Column('user_can_change', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['selection_option_id'], ['selection_option.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('filter_set',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saved_filter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('MULTISELECT', 'SELECT', 'TEXT', name='filtergrouptype'), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('company_filter_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('filter_set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_filter_id'], ['company_filter.id'], ),
    sa.ForeignKeyConstraint(['filter_set_id'], ['filter_set.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_filter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('MULTISELECT', 'SELECT', 'TEXT', name='filtergrouptype'), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('company_filter_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['company_filter_id'], ['company_filter.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_filter')
    op.drop_table('saved_filter')
    op.drop_table('filter_set')
    op.drop_table('company_filter')
    op.drop_table('selection_option')
    op.drop_table('filter_type')
    # ### end Alembic commands ###
    op.execute("DROP TYPE filterfield;")
    op.execute("DROP TYPE filtergrouptype;")
