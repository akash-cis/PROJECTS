"""added user_accounts table and copied data from user table

Revision ID: 6fff55ba6cef
Revises: fb64f2966a61
Create Date: 2020-08-31 07:27:09.666284

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '6fff55ba6cef'
down_revision = 'fb64f2966a61'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    # making nullable True so migrartion works.
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVATED', name='status'), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    t_users = sa.Table(
        'user',
        sa.MetaData(),
        sa.Column('id', sa.Integer()),
        sa.Column('company_id', sa.Integer()), 
        sa.Column('status', sa.String()), 
        )
    t_user_accounts = sa.Table(
        'user_accounts',
        sa.MetaData(),
        sa.Column('user_id', sa.Integer()),
        sa.Column('company_id', sa.Integer()), 
        sa.Column('status', sa.String()), 
        )    
    # Use Alchemy's connection and transaction to noodle over the data.
    conn = op.get_bind()
    res = conn.execute("select id,company_id,status from public.user")
    results = res.fetchall()
    # Company ID is Null for the First added Admin User 
    clients = [{'user_id': r[0], 'company_id': r[1], 'status':r[2]} for r in results]
    op.bulk_insert(t_user_accounts, clients)

def downgrade():
    filtergrouptype = postgresql.ENUM('PENDING', 'ACTIVATED', name='status')
    op.drop_table('user_accounts')
    filtergrouptype.drop(op.get_bind())
    # ### end Alembic commands ###
